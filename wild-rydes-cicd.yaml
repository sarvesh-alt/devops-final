AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Deploy a Flask app on ECS Fargate with an ALB, custom VPC, and a complete CI/CD pipeline.
  This template creates networking (VPC, Subnets, IGW, NAT), ECS resources (cluster, task, service),
  an Application Load Balancer, and CI/CD resources (CodeBuild, CodeDeploy, CodePipeline).
  It also defines CloudWatch alarms to catch failures in CodeBuild and CodePipeline.

Parameters:
  VpcCIDR:
    Description: CIDR block for VPC
    Type: String
    Default: 10.0.0.0/16
  S3ArtifactBucket:
    Description: The S3 bucket used to store CodePipeline artifacts.
    Type: String
    Default: my-cicd-artifacts-bucket
  GitHubOwner:
    Description: Your GitHub username or organization.
    Type: String
  GitHubRepo:
    Description: The GitHub repository name.
    Type: String
  GitBranch:
    Description: The branch in the GitHub repository to deploy.
    Type: String
    Default: master
  GitHubOAuthToken:
    Description: GitHub OAuth token with access to the repository.
    Type: String
    NoEcho: true
  SNSTopicARN:
    Description: ARN of the SNS topic to notify on alarm triggers.
    Type: String

Resources:
  #########################################
  ## VPC, Subnets, IGW, NAT & Routing
  #########################################
  MoreVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: more-vpc

  MorePublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MoreVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: more-public-subnet-1

  MorePublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MoreVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: more-public-subnet-2

  MorePrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MoreVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: more-private-subnet-1

  MorePrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MoreVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: more-private-subnet-2

  MoreInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: more-igw

  MoreVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MoreVPC
      InternetGatewayId: !Ref MoreInternetGateway

  MorePublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MoreVPC
      Tags:
        - Key: Name
          Value: more-public-rt

  MorePublicRoute:
    Type: AWS::EC2::Route
    DependsOn: MoreVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref MorePublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MoreInternetGateway

  MorePublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MorePublicSubnet1
      RouteTableId: !Ref MorePublicRouteTable

  MorePublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MorePublicSubnet2
      RouteTableId: !Ref MorePublicRouteTable

  MoreNATGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: MoreVPCGatewayAttachment
    Properties:
      Domain: vpc

  MoreNATGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: MorePublicSubnet1RouteTableAssociation
    Properties:
      AllocationId: !GetAtt MoreNATGatewayEIP.AllocationId
      SubnetId: !Ref MorePublicSubnet1
      Tags:
        - Key: Name
          Value: more-nat-gateway

  MorePrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MoreVPC
      Tags:
        - Key: Name
          Value: more-private-rt

  MorePrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: MoreNATGateway
    Properties:
      RouteTableId: !Ref MorePrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MoreNATGateway

  MorePrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MorePrivateSubnet1
      RouteTableId: !Ref MorePrivateRouteTable

  MorePrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MorePrivateSubnet2
      RouteTableId: !Ref MorePrivateRouteTable

  #########################################
  ## Security Groups and Load Balancer
  #########################################
  MoreALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the ALB (allows inbound HTTP)
      VpcId: !Ref MoreVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: more-alb-sg

  MoreBackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS tasks (allow traffic from ALB on port 5000)
      VpcId: !Ref MoreVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !Ref MoreALBSecurityGroup
      Tags:
        - Key: Name
          Value: more-backend-sg

  MoreLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: more-alb
      Scheme: internet-facing
      Subnets:
        - !Ref MorePublicSubnet1
        - !Ref MorePublicSubnet2
      SecurityGroups:
        - !Ref MoreALBSecurityGroup
      Type: application
      Tags:
        - Key: Name
          Value: more-alb

  MoreTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: more-tg
      Port: 5000
      Protocol: HTTP
      VpcId: !Ref MoreVPC
      HealthCheckProtocol: HTTP
      HealthCheckPort: "5000"
      HealthCheckPath: /
      Matcher:
        HttpCode: "200"
      TargetType: ip

  MoreListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MoreLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MoreTargetGroup

  #########################################
  ## ECS Cluster, Task Definition & Service
  #########################################
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  MoreECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: more-ecs-cluster

  MoreECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: devops-final-task
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: "256"
      Memory: "512"
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: flask-app
          # Replace the image URI below with your ECR repository URI if dynamically built.
          Image: "615299769322.dkr.ecr.ca-central-1.amazonaws.com/devops-final:latest"
          PortMappings:
            - ContainerPort: 5000
          Essential: true

  MoreECSService:
    Type: AWS::ECS::Service
    DependsOn: MoreListener
    Properties:
      ServiceName: devops-final-service
      Cluster: !Ref MoreECSCluster
      TaskDefinition: !Ref MoreECSTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref MorePrivateSubnet1
            - !Ref MorePrivateSubnet2
          SecurityGroups:
            - !Ref MoreBackendSecurityGroup
          AssignPublicIp: DISABLED
      LoadBalancers:
        - ContainerName: flask-app
          ContainerPort: 5000
          TargetGroupArn: !Ref MoreTargetGroup

  #########################################
  ## CI/CD Resources: IAM Roles, CodeBuild, CodeDeploy & CodePipeline
  #########################################
  ## IAM Role for CodeBuild
  MoreCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: more-codebuild-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MoreCodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${S3ArtifactBucket}/*"

  ## IAM Role for CodeDeploy
  MoreCodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: more-codedeploy-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MoreCodeDeployPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:UpdateService
                  - ecs:DescribeTasks
                  - lambda:InvokeFunction
                Resource: "*"

  ## IAM Role for CodePipeline
  MoreCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: more-codepipeline-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MoreCodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:RegisterApplicationRevision
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketVersioning
                Resource:
                  - !Sub "arn:aws:s3:::${S3ArtifactBucket}"
                  - !Sub "arn:aws:s3:::${S3ArtifactBucket}/*"

  ## CodeBuild Project
  MoreCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: more-codebuild-project
      ServiceRole: !GetAtt MoreCodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30

  ## CodeDeploy Application
  MoreCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: more-codedeploy-application
      ComputePlatform: ECS

  ## CodeDeploy Deployment Group
  MoreCodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref MoreCodeDeployApplication
      DeploymentGroupName: more-codedeploy-deployment-group
      ServiceRoleArn: !GetAtt MoreCodeDeployRole.Arn
      DeploymentStyle:
        DeploymentType: BLUE_GREEN
        DeploymentOption: WITH_TRAFFIC_CONTROL
      BlueGreenDeploymentConfiguration:
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 5
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
          WaitTimeInMinutes: 0
        GreenFleetProvisioningOption:
          Action: DISCOVER_EXISTING
      ECSServices:
        - ClusterName: !Ref MoreECSCluster
          ServiceName: !Ref MoreECSService

  ## CodePipeline
  MoreCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: more-codepipeline
      RoleArn: !GetAtt MoreCodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref MoreCodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: "1"
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ApplicationName: !Ref MoreCodeDeployApplication
                DeploymentGroupName: !Ref MoreCodeDeployDeploymentGroup
              RunOrder: 1

  #########################################
  ## CloudWatch Alarms for CI/CD monitoring
  #########################################
  MorePipelineAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: more-codepipeline-failure-alarm
      AlarmDescription: Alarm for CodePipeline failures
      MetricName: PipelineExecutionFailed
      Namespace: AWS/CodePipeline
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: PipelineName
          Value: !Ref MoreCodePipeline
      AlarmActions:
        - !Ref SNSTopicARN

  MoreBuildAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: more-codebuild-failure-alarm
      AlarmDescription: Alarm for CodeBuild failures
      MetricName: FailedBuilds
      Namespace: AWS/CodeBuild
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ProjectName
          Value: !Ref MoreCodeBuildProject
      AlarmActions:
        - !Ref SNSTopicARN

Outputs:
  LoadBalancerDNS:
    Description: "The DNS name of the ALB"
    Value: !GetAtt MoreLoadBalancer.DNSName
  CodePipelineName:
    Description: "The name of the created CodePipeline"
    Value: !Ref MoreCodePipeline
